// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from loginsystem.djinni

#pragma once

#include "djinni_support.hpp"
#include "request_callback.hpp"

namespace djinni_generated {

class NativeRequestCallback final : ::djinni::JniInterface<::loginsystem::RequestCallback, NativeRequestCallback> {
public:
    using CppType = std::shared_ptr<::loginsystem::RequestCallback>;
    using CppOptType = std::shared_ptr<::loginsystem::RequestCallback>;
    using JniType = jobject;

    using Boxed = NativeRequestCallback;

    ~NativeRequestCallback();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeRequestCallback>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeRequestCallback>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeRequestCallback();
    friend ::djinni::JniClass<NativeRequestCallback>;
    friend ::djinni::JniInterface<::loginsystem::RequestCallback, NativeRequestCallback>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::loginsystem::RequestCallback
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void callback(const ::loginsystem::ServerResponse & response) override;

    private:
        friend ::djinni::JniInterface<::loginsystem::RequestCallback, ::djinni_generated::NativeRequestCallback>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/dropbox/loginsystem/RequestCallback") };
    const jmethodID method_callback { ::djinni::jniGetMethodID(clazz.get(), "callback", "(Lcom/dropbox/loginsystem/ServerResponse;)V") };
};

}  // namespace djinni_generated
